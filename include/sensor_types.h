/*
 * sensord
 *
 * Copyright (c) 2016 Samsung Electronics Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

#ifndef __SENSOR_TYPES_H__
#define __SENSOR_TYPES_H__

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum sensor_type_t {
	UNKNOWN_SENSOR = -2,
	ALL_SENSOR = -1,
	ACCELEROMETER_SENSOR = 0,
	GRAVITY_SENSOR,
	LINEAR_ACCEL_SENSOR,
	GEOMAGNETIC_SENSOR,
	ROTATION_VECTOR_SENSOR,
	ORIENTATION_SENSOR,
	GYROSCOPE_SENSOR,
	LIGHT_SENSOR,
	PROXIMITY_SENSOR,
	PRESSURE_SENSOR,
	ULTRAVIOLET_SENSOR,
	TEMPERATURE_SENSOR,
	HUMIDITY_SENSOR,
	HRM_SENSOR,
	BIO_HRM_SENSOR = HRM_SENSOR,
	HRM_LED_GREEN_SENSOR,
	BIO_LED_GREEN_SENSOR = HRM_LED_GREEN_SENSOR,
	HRM_LED_IR_SENSOR,
	BIO_LED_IR_SENSOR = HRM_LED_IR_SENSOR,
	HRM_LED_RED_SENSOR,
	BIO_LED_RED_SENSOR = HRM_LED_RED_SENSOR,
	GYROSCOPE_UNCAL_SENSOR,
	GEOMAGNETIC_UNCAL_SENSOR,
	GYROSCOPE_RV_SENSOR,
	GEOMAGNETIC_RV_SENSOR,

	HUMAN_PEDOMETER_SENSOR = 0x300,
	HUMAN_SLEEP_MONITOR_SENSOR,
	HUMAN_SLEEP_DETECTOR_SENSOR,
	SLEEP_DETECTOR_SENSOR = HUMAN_SLEEP_DETECTOR_SENSOR,
	HUMAN_STRESS_MONITOR_SENSOR,
	STRESS_MONITOR_SENSOR = HUMAN_STRESS_MONITOR_SENSOR,

	EXERCISE_WALKING_SENSOR = 0x400,
	EXERCISE_RUNNING_SENSOR,
	EXERCISE_HIKING_SENSOR,
	EXERCISE_CYCLING_SENSOR,
	EXERCISE_ELLIPTICAL_SENSOR,
	EXERCISE_INDOOR_CYCLING_SENSOR,
	EXERCISE_ROWING_SENSOR,
	EXERCISE_STEPPER_SENSOR,

	EXTERNAL_EXERCISE_SENSOR = 0x800,
	EXERCISE_SENSOR = EXTERNAL_EXERCISE_SENSOR,

	FUSION_SENSOR = 0x900,
	AUTO_ROTATION_SENSOR,
	AUTO_BRIGHTNESS_SENSOR,

	GESTURE_MOVEMENT_SENSOR = 0x1200,
	GESTURE_WRIST_UP_SENSOR,
	GESTURE_WRIST_DOWN_SENSOR,
	GESTURE_MOVEMENT_STATE_SENSOR,
	GESTURE_FACE_DOWN_SENSOR,

	ACTIVITY_TRACKER_SENSOR = 0x1A00,
	ACTIVITY_LEVEL_MONITOR_SENSOR,
	GPS_BATCH_SENSOR,

	HRM_CTRL_SENSOR = 0x1A80,

	WEAR_STATUS_SENSOR = 0x2000,
	WEAR_ON_MONITOR_SENSOR,
	NO_MOVE_DETECTOR_SENSOR,
	RESTING_HR_SENSOR,
	STEP_LEVEL_MONITOR_SENSOR,
	EXERCISE_STANDALONE_SENSOR,
	EXERCISE_COACH_SENSOR = EXERCISE_STANDALONE_SENSOR,
	EXERCISE_HR_SENSOR,
	WORKOUT_SENSOR,
	AUTOSESSION_EXERCISE_SENSOR = WORKOUT_SENSOR,
	CYCLE_MONITOR_SENSOR,
	STAIR_TRACKER_SENSOR,
	PRESSURE_INDICATOR_SENSOR,
	PRESSURE_ALERT_SENSOR,
	HR_CALORIE_SENSOR,

	CONTEXT_SENSOR = 0x7000,
	MOTION_SENSOR,
	PIR_SENSOR,
	PIR_LONG_SENSOR,
	DUST_SENSOR,
	THERMOMETER_SENSOR,
	PEDOMETER_SENSOR,
	FLAT_SENSOR,
	HRM_RAW_SENSOR,
	BIO_SENSOR = HRM_RAW_SENSOR,
	TILT_SENSOR,
	RV_RAW_SENSOR,
	GSR_SENSOR,
	SIMSENSE_SENSOR,
	PPG_SENSOR,

	CUSTOM_SENSOR = 0X9000,
} sensor_type_t;

enum proxi_change_state {
	PROXIMITY_STATE_NEAR = 0,
	PROXIMITY_STATE_FAR = 1,
};

enum auto_rotation_state {
	AUTO_ROTATION_DEGREE_UNKNOWN = 0,
	AUTO_ROTATION_DEGREE_0,
	AUTO_ROTATION_DEGREE_90,
	AUTO_ROTATION_DEGREE_180,
	AUTO_ROTATION_DEGREE_270,
};

#ifdef __cplusplus
}
#endif

#include <sensor_deprecated.h>

#endif /* __SENSOR_TYPES_H__ */
